# -*- coding:utf8 -*-
#pollard rho Algorithm

import gmpy2
import os
def mapx(x):
    x=(pow(x,n-1,n)+3)%n
    #x=(pow(x,2,n)+1)%n
    return x

def pollard(x1,x2):
    while True:
        x1=mapx(x1)
        x2=mapx(mapx(x2))
        p=gmpy2.gcd((x1-x2)%n,n)
        if p>1:
            print p
            break     
            
def newpollard(x1,x2):
    while True:
        i=1
        z=1
        while i<=100:
            x1=mapx(x1)
            x2=mapx(mapx(x2))
            i=i+1
            z=((x2-x1)*z)%n
        p=gmpy2.gcd(z,n)
        print p
        if p==n:
            return 0
        elif p>1:
            return p
            

n=33774167600199691072470424898842928168570559940362770786060699320989546851695106466924163816843729828399984649770900793014896037884774039660562546937090412844276185560384964983508291174867808082182386566813393157054259464108858158903739578119760394228341564696225513954400995543629624209942565369972555679980359992955514826589781286738100616149226885302403505062415492679633217275379153421830105021673417544608398249866398042786421630495968810854036782025120509999022773806069591080190166920079688217334968528641747739241234353918892029263544388161160427668518991666960251381106788899451912317001247537576428186291689
def main():
  print newpollard(2,2)
    
if __name__ =='__main__':
    main()
   
